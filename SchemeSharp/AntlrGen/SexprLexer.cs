//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/chenjinsong/RiderProjects/SchemeSharp/SchemeSharp/Sexpr.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrGen {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class SexprLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, NUMBER=2, STRING=3, WHITESPACE=4, SYMBOL=5, LPAREN=6, RPAREN=7, 
		DOT=8, PLUS=9, MINUS=10;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "NUMBER", "STRING", "WHITESPACE", "SYMBOL", "LPAREN", "RPAREN", 
		"DOT", "PLUS", "MINUS", "COMPLEX", "REAL", "IMAGINARY", "DECIMAL", "RATIONAL", 
		"INTEGER", "SYMBOL_START", "SYMBOL_NO_START", "DIGIT"
	};


	public SexprLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SexprLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'''", null, null, null, null, "'('", "')'", "'.'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, "NUMBER", "STRING", "WHITESPACE", "SYMBOL", "LPAREN", "RPAREN", 
		"DOT", "PLUS", "MINUS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Sexpr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static SexprLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\f', '\x88', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\a', '\x4', '\x32', '\n', '\x4', '\f', '\x4', '\xE', '\x4', '\x35', 
		'\v', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x6', '\x5', ':', 
		'\n', '\x5', '\r', '\x5', '\xE', '\x5', ';', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\a', '\x6', '\x44', 
		'\n', '\x6', '\f', '\x6', '\xE', '\x6', 'G', '\v', '\x6', '\x3', '\a', 
		'\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x5', '\f', 'X', '\n', '\f', '\x3', 
		'\r', '\x3', '\r', '\x5', '\r', '\\', '\n', '\r', '\x3', '\r', '\x3', 
		'\r', '\x5', '\r', '`', '\n', '\r', '\x3', '\xE', '\x3', '\xE', '\x5', 
		'\xE', '\x64', '\n', '\xE', '\x3', '\xE', '\x3', '\xE', '\x5', '\xE', 
		'h', '\n', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x5', '\xF', 
		'w', '\n', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x6', '\x11', '~', '\n', '\x11', '\r', '\x11', 
		'\xE', '\x11', '\x7F', '\x3', '\x12', '\x5', '\x12', '\x83', '\n', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x2', '\x2', 
		'\x15', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', 
		'\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', 
		'\x2', '\x19', '\x2', '\x1B', '\x2', '\x1D', '\x2', '\x1F', '\x2', '!', 
		'\x2', '#', '\x2', '%', '\x2', '\'', '\x2', '\x3', '\x2', '\x5', '\x4', 
		'\x2', '$', '$', '^', '^', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x6', '\x2', ',', '-', '/', '\x31', '\x43', '\\', '\x63', '|', 
		'\x2', '\x8F', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x3', 
		')', '\x3', '\x2', '\x2', '\x2', '\x5', '+', '\x3', '\x2', '\x2', '\x2', 
		'\a', '-', '\x3', '\x2', '\x2', '\x2', '\t', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\v', '?', '\x3', '\x2', '\x2', '\x2', '\r', 'H', '\x3', '\x2', 
		'\x2', '\x2', '\xF', 'J', '\x3', '\x2', '\x2', '\x2', '\x11', 'L', '\x3', 
		'\x2', '\x2', '\x2', '\x13', 'N', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'P', '\x3', '\x2', '\x2', '\x2', '\x17', 'W', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '[', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x63', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', 'v', '\x3', '\x2', '\x2', '\x2', '\x1F', 'x', '\x3', 
		'\x2', '\x2', '\x2', '!', '}', '\x3', '\x2', '\x2', '\x2', '#', '\x82', 
		'\x3', '\x2', '\x2', '\x2', '%', '\x84', '\x3', '\x2', '\x2', '\x2', '\'', 
		'\x86', '\x3', '\x2', '\x2', '\x2', ')', '*', '\a', ')', '\x2', '\x2', 
		'*', '\x4', '\x3', '\x2', '\x2', '\x2', '+', ',', '\x5', '\x17', '\f', 
		'\x2', ',', '\x6', '\x3', '\x2', '\x2', '\x2', '-', '\x33', '\a', '$', 
		'\x2', '\x2', '.', '/', '\a', '^', '\x2', '\x2', '/', '\x32', '\v', '\x2', 
		'\x2', '\x2', '\x30', '\x32', '\n', '\x2', '\x2', '\x2', '\x31', '.', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\x32', '\x35', '\x3', '\x2', '\x2', '\x2', '\x33', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\x33', '\x34', '\x3', '\x2', '\x2', '\x2', '\x34', '\x36', 
		'\x3', '\x2', '\x2', '\x2', '\x35', '\x33', '\x3', '\x2', '\x2', '\x2', 
		'\x36', '\x37', '\a', '$', '\x2', '\x2', '\x37', '\b', '\x3', '\x2', '\x2', 
		'\x2', '\x38', ':', '\t', '\x3', '\x2', '\x2', '\x39', '\x38', '\x3', 
		'\x2', '\x2', '\x2', ':', ';', '\x3', '\x2', '\x2', '\x2', ';', '\x39', 
		'\x3', '\x2', '\x2', '\x2', ';', '<', '\x3', '\x2', '\x2', '\x2', '<', 
		'=', '\x3', '\x2', '\x2', '\x2', '=', '>', '\b', '\x5', '\x2', '\x2', 
		'>', '\n', '\x3', '\x2', '\x2', '\x2', '?', '\x45', '\x5', '#', '\x12', 
		'\x2', '@', '\x44', '\x5', '#', '\x12', '\x2', '\x41', '\x44', '\x5', 
		'\'', '\x14', '\x2', '\x42', '\x44', '\x5', '%', '\x13', '\x2', '\x43', 
		'@', '\x3', '\x2', '\x2', '\x2', '\x43', '\x41', '\x3', '\x2', '\x2', 
		'\x2', '\x43', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', 'G', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x43', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\x3', '\x2', '\x2', '\x2', '\x46', '\f', '\x3', '\x2', '\x2', 
		'\x2', 'G', '\x45', '\x3', '\x2', '\x2', '\x2', 'H', 'I', '\a', '*', '\x2', 
		'\x2', 'I', '\xE', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\a', '+', '\x2', 
		'\x2', 'K', '\x10', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', '\x30', 
		'\x2', '\x2', 'M', '\x12', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', 
		'-', '\x2', '\x2', 'O', '\x14', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', 
		'\a', '/', '\x2', '\x2', 'Q', '\x16', '\x3', '\x2', '\x2', '\x2', 'R', 
		'X', '\x5', '\x19', '\r', '\x2', 'S', 'X', '\x5', '\x1B', '\xE', '\x2', 
		'T', 'U', '\x5', '\x19', '\r', '\x2', 'U', 'V', '\x5', '\x1B', '\xE', 
		'\x2', 'V', 'X', '\x3', '\x2', '\x2', '\x2', 'W', 'R', '\x3', '\x2', '\x2', 
		'\x2', 'W', 'S', '\x3', '\x2', '\x2', '\x2', 'W', 'T', '\x3', '\x2', '\x2', 
		'\x2', 'X', '\x18', '\x3', '\x2', '\x2', '\x2', 'Y', '\\', '\x5', '\x13', 
		'\n', '\x2', 'Z', '\\', '\x5', '\x15', '\v', '\x2', '[', 'Y', '\x3', '\x2', 
		'\x2', '\x2', '[', 'Z', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\x3', 
		'\x2', '\x2', '\x2', '\\', '_', '\x3', '\x2', '\x2', '\x2', ']', '`', 
		'\x5', '\x1D', '\xF', '\x2', '^', '`', '\x5', '\x1F', '\x10', '\x2', '_', 
		']', '\x3', '\x2', '\x2', '\x2', '_', '^', '\x3', '\x2', '\x2', '\x2', 
		'`', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x61', '\x64', '\x5', '\x13', 
		'\n', '\x2', '\x62', '\x64', '\x5', '\x15', '\v', '\x2', '\x63', '\x61', 
		'\x3', '\x2', '\x2', '\x2', '\x63', '\x62', '\x3', '\x2', '\x2', '\x2', 
		'\x64', 'g', '\x3', '\x2', '\x2', '\x2', '\x65', 'h', '\x5', '\x1D', '\xF', 
		'\x2', '\x66', 'h', '\x5', '\x1F', '\x10', '\x2', 'g', '\x65', '\x3', 
		'\x2', '\x2', '\x2', 'g', '\x66', '\x3', '\x2', '\x2', '\x2', 'h', 'i', 
		'\x3', '\x2', '\x2', '\x2', 'i', 'j', '\a', 'k', '\x2', '\x2', 'j', '\x1C', 
		'\x3', '\x2', '\x2', '\x2', 'k', 'w', '\x5', '!', '\x11', '\x2', 'l', 
		'm', '\x5', '\x11', '\t', '\x2', 'm', 'n', '\x5', '!', '\x11', '\x2', 
		'n', 'w', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\x5', '!', '\x11', '\x2', 
		'p', 'q', '\x5', '\x11', '\t', '\x2', 'q', 'r', '\x5', '!', '\x11', '\x2', 
		'r', 'w', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x5', '!', '\x11', '\x2', 
		't', 'u', '\x5', '\x11', '\t', '\x2', 'u', 'w', '\x3', '\x2', '\x2', '\x2', 
		'v', 'k', '\x3', '\x2', '\x2', '\x2', 'v', 'l', '\x3', '\x2', '\x2', '\x2', 
		'v', 'o', '\x3', '\x2', '\x2', '\x2', 'v', 's', '\x3', '\x2', '\x2', '\x2', 
		'w', '\x1E', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\x5', '!', '\x11', 
		'\x2', 'y', 'z', '\a', '\x31', '\x2', '\x2', 'z', '{', '\x5', '!', '\x11', 
		'\x2', '{', ' ', '\x3', '\x2', '\x2', '\x2', '|', '~', '\x5', '\'', '\x14', 
		'\x2', '}', '|', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\x3', '\x2', 
		'\x2', '\x2', '\x7F', '}', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', 
		'\x3', '\x2', '\x2', '\x2', '\x80', '\"', '\x3', '\x2', '\x2', '\x2', 
		'\x81', '\x83', '\t', '\x4', '\x2', '\x2', '\x82', '\x81', '\x3', '\x2', 
		'\x2', '\x2', '\x83', '$', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', 
		'\a', '#', '\x2', '\x2', '\x85', '&', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x87', '\x4', '\x32', ';', '\x2', '\x87', '(', '\x3', '\x2', '\x2', '\x2', 
		'\x10', '\x2', '\x31', '\x33', ';', '\x43', '\x45', 'W', '[', '_', '\x63', 
		'g', 'v', '\x7F', '\x82', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace AntlrGen
