//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/chenjinsong/RiderProjects/SchemeSharp/SchemeSharp/Sexpr.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrGen {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class SexprLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, NUMBER=2, STRING=3, WHITESPACE=4, SYMBOL=5, LPAREN=6, RPAREN=7, 
		DOT=8, PLUS=9, MINUS=10;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "NUMBER", "STRING", "WHITESPACE", "SYMBOL", "LPAREN", "RPAREN", 
		"DOT", "PLUS", "MINUS", "COMPLEX", "REAL", "IMAGINARY", "DECIMAL", "RATIONAL", 
		"INTEGER", "SYMBOL_START", "DIGIT"
	};


	public SexprLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SexprLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'''", null, null, null, null, "'('", "')'", "'.'", "'+'", "'-'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, "NUMBER", "STRING", "WHITESPACE", "SYMBOL", "LPAREN", "RPAREN", 
		"DOT", "PLUS", "MINUS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Sexpr.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static SexprLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\f', '\x83', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\a', '\x4', '\x30', 
		'\n', '\x4', '\f', '\x4', '\xE', '\x4', '\x33', '\v', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x5', '\x6', '\x5', '\x38', '\n', '\x5', '\r', '\x5', 
		'\xE', '\x5', '\x39', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\a', '\x6', '\x41', '\n', '\x6', '\f', '\x6', '\xE', 
		'\x6', '\x44', '\v', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', 
		'\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\x5', '\f', 'U', '\n', '\f', '\x3', '\r', '\x3', '\r', '\x5', '\r', 
		'Y', '\n', '\r', '\x3', '\r', '\x3', '\r', '\x5', '\r', ']', '\n', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\x5', '\xE', '\x61', '\n', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x5', '\xE', '\x65', '\n', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x5', '\xF', 't', '\n', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x6', '\x11', 
		'{', '\n', '\x11', '\r', '\x11', '\xE', '\x11', '|', '\x3', '\x12', '\x5', 
		'\x12', '\x80', '\n', '\x12', '\x3', '\x13', '\x3', '\x13', '\x2', '\x2', 
		'\x14', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', 
		'\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', 
		'\x2', '\x19', '\x2', '\x1B', '\x2', '\x1D', '\x2', '\x1F', '\x2', '!', 
		'\x2', '#', '\x2', '%', '\x2', '\x3', '\x2', '\x5', '\x4', '\x2', '$', 
		'$', '^', '^', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x6', 
		'\x2', ',', '-', '/', '\x31', '\x43', '\\', '\x63', '|', '\x2', '\x8A', 
		'\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x3', '\'', 
		'\x3', '\x2', '\x2', '\x2', '\x5', ')', '\x3', '\x2', '\x2', '\x2', '\a', 
		'+', '\x3', '\x2', '\x2', '\x2', '\t', '\x37', '\x3', '\x2', '\x2', '\x2', 
		'\v', '=', '\x3', '\x2', '\x2', '\x2', '\r', '\x45', '\x3', '\x2', '\x2', 
		'\x2', '\xF', 'G', '\x3', '\x2', '\x2', '\x2', '\x11', 'I', '\x3', '\x2', 
		'\x2', '\x2', '\x13', 'K', '\x3', '\x2', '\x2', '\x2', '\x15', 'M', '\x3', 
		'\x2', '\x2', '\x2', '\x17', 'T', '\x3', '\x2', '\x2', '\x2', '\x19', 
		'X', '\x3', '\x2', '\x2', '\x2', '\x1B', '`', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', 's', '\x3', '\x2', '\x2', '\x2', '\x1F', 'u', '\x3', '\x2', '\x2', 
		'\x2', '!', 'z', '\x3', '\x2', '\x2', '\x2', '#', '\x7F', '\x3', '\x2', 
		'\x2', '\x2', '%', '\x81', '\x3', '\x2', '\x2', '\x2', '\'', '(', '\a', 
		')', '\x2', '\x2', '(', '\x4', '\x3', '\x2', '\x2', '\x2', ')', '*', '\x5', 
		'\x17', '\f', '\x2', '*', '\x6', '\x3', '\x2', '\x2', '\x2', '+', '\x31', 
		'\a', '$', '\x2', '\x2', ',', '-', '\a', '^', '\x2', '\x2', '-', '\x30', 
		'\v', '\x2', '\x2', '\x2', '.', '\x30', '\n', '\x2', '\x2', '\x2', '/', 
		',', '\x3', '\x2', '\x2', '\x2', '/', '.', '\x3', '\x2', '\x2', '\x2', 
		'\x30', '\x33', '\x3', '\x2', '\x2', '\x2', '\x31', '/', '\x3', '\x2', 
		'\x2', '\x2', '\x31', '\x32', '\x3', '\x2', '\x2', '\x2', '\x32', '\x34', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\x34', '\x35', '\a', '$', '\x2', '\x2', '\x35', '\b', '\x3', '\x2', '\x2', 
		'\x2', '\x36', '\x38', '\t', '\x3', '\x2', '\x2', '\x37', '\x36', '\x3', 
		'\x2', '\x2', '\x2', '\x38', '\x39', '\x3', '\x2', '\x2', '\x2', '\x39', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\x3', '\x2', '\x2', 
		'\x2', ':', ';', '\x3', '\x2', '\x2', '\x2', ';', '<', '\b', '\x5', '\x2', 
		'\x2', '<', '\n', '\x3', '\x2', '\x2', '\x2', '=', '\x42', '\x5', '#', 
		'\x12', '\x2', '>', '\x41', '\x5', '#', '\x12', '\x2', '?', '\x41', '\x5', 
		'%', '\x13', '\x2', '@', '>', '\x3', '\x2', '\x2', '\x2', '@', '?', '\x3', 
		'\x2', '\x2', '\x2', '\x41', '\x44', '\x3', '\x2', '\x2', '\x2', '\x42', 
		'@', '\x3', '\x2', '\x2', '\x2', '\x42', '\x43', '\x3', '\x2', '\x2', 
		'\x2', '\x43', '\f', '\x3', '\x2', '\x2', '\x2', '\x44', '\x42', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x46', '\a', '*', '\x2', '\x2', '\x46', 
		'\xE', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', '+', '\x2', '\x2', 
		'H', '\x10', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\a', '\x30', '\x2', 
		'\x2', 'J', '\x12', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\a', '-', '\x2', 
		'\x2', 'L', '\x14', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\a', '/', '\x2', 
		'\x2', 'N', '\x16', '\x3', '\x2', '\x2', '\x2', 'O', 'U', '\x5', '\x19', 
		'\r', '\x2', 'P', 'U', '\x5', '\x1B', '\xE', '\x2', 'Q', 'R', '\x5', '\x19', 
		'\r', '\x2', 'R', 'S', '\x5', '\x1B', '\xE', '\x2', 'S', 'U', '\x3', '\x2', 
		'\x2', '\x2', 'T', 'O', '\x3', '\x2', '\x2', '\x2', 'T', 'P', '\x3', '\x2', 
		'\x2', '\x2', 'T', 'Q', '\x3', '\x2', '\x2', '\x2', 'U', '\x18', '\x3', 
		'\x2', '\x2', '\x2', 'V', 'Y', '\x5', '\x13', '\n', '\x2', 'W', 'Y', '\x5', 
		'\x15', '\v', '\x2', 'X', 'V', '\x3', '\x2', '\x2', '\x2', 'X', 'W', '\x3', 
		'\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 'Y', '\\', 
		'\x3', '\x2', '\x2', '\x2', 'Z', ']', '\x5', '\x1D', '\xF', '\x2', '[', 
		']', '\x5', '\x1F', '\x10', '\x2', '\\', 'Z', '\x3', '\x2', '\x2', '\x2', 
		'\\', '[', '\x3', '\x2', '\x2', '\x2', ']', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', '^', '\x61', '\x5', '\x13', '\n', '\x2', '_', '\x61', '\x5', '\x15', 
		'\v', '\x2', '`', '^', '\x3', '\x2', '\x2', '\x2', '`', '_', '\x3', '\x2', 
		'\x2', '\x2', '\x61', '\x64', '\x3', '\x2', '\x2', '\x2', '\x62', '\x65', 
		'\x5', '\x1D', '\xF', '\x2', '\x63', '\x65', '\x5', '\x1F', '\x10', '\x2', 
		'\x64', '\x62', '\x3', '\x2', '\x2', '\x2', '\x64', '\x63', '\x3', '\x2', 
		'\x2', '\x2', '\x65', '\x66', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', 
		'\a', 'k', '\x2', '\x2', 'g', '\x1C', '\x3', '\x2', '\x2', '\x2', 'h', 
		't', '\x5', '!', '\x11', '\x2', 'i', 'j', '\x5', '\x11', '\t', '\x2', 
		'j', 'k', '\x5', '!', '\x11', '\x2', 'k', 't', '\x3', '\x2', '\x2', '\x2', 
		'l', 'm', '\x5', '!', '\x11', '\x2', 'm', 'n', '\x5', '\x11', '\t', '\x2', 
		'n', 'o', '\x5', '!', '\x11', '\x2', 'o', 't', '\x3', '\x2', '\x2', '\x2', 
		'p', 'q', '\x5', '!', '\x11', '\x2', 'q', 'r', '\x5', '\x11', '\t', '\x2', 
		'r', 't', '\x3', '\x2', '\x2', '\x2', 's', 'h', '\x3', '\x2', '\x2', '\x2', 
		's', 'i', '\x3', '\x2', '\x2', '\x2', 's', 'l', '\x3', '\x2', '\x2', '\x2', 
		's', 'p', '\x3', '\x2', '\x2', '\x2', 't', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', 'u', 'v', '\x5', '!', '\x11', '\x2', 'v', 'w', '\a', '\x31', '\x2', 
		'\x2', 'w', 'x', '\x5', '!', '\x11', '\x2', 'x', ' ', '\x3', '\x2', '\x2', 
		'\x2', 'y', '{', '\x5', '%', '\x13', '\x2', 'z', 'y', '\x3', '\x2', '\x2', 
		'\x2', '{', '|', '\x3', '\x2', '\x2', '\x2', '|', 'z', '\x3', '\x2', '\x2', 
		'\x2', '|', '}', '\x3', '\x2', '\x2', '\x2', '}', '\"', '\x3', '\x2', 
		'\x2', '\x2', '~', '\x80', '\t', '\x4', '\x2', '\x2', '\x7F', '~', '\x3', 
		'\x2', '\x2', '\x2', '\x80', '$', '\x3', '\x2', '\x2', '\x2', '\x81', 
		'\x82', '\x4', '\x32', ';', '\x2', '\x82', '&', '\x3', '\x2', '\x2', '\x2', 
		'\x10', '\x2', '/', '\x31', '\x39', '@', '\x42', 'T', 'X', '\\', '`', 
		'\x64', 's', '|', '\x7F', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace AntlrGen
